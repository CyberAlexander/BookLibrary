<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="by.leonovich.booklib"/>
    <aop:aspectj-autoproxy/>

    <!--Translate exceptions to Spring-exceptions -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="jdbc:mysql://localhost:3306/book_library"/>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="username" value="****"/>
        <property name="password" value="****"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="10"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <value>by.leonovich.booklib.domain</value>
            </list>
        </property>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="debug">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</prop>
                <prop key="connection.isolation">2</prop>
                <prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
        </property>
    </bean>

    <!-- TRANSACTION SETTINGS -->
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

    <!--<bean id="bookService" class="by.leonovich.booklib.services.BookService"/>

    <bean id="bookDao" class="by.leonovich.booklib.dao.BookDao"/>-->

    <bean id="bookEntity" class="by.leonovich.booklib.domain.Book">
        <constructor-arg index="0" value="testtitle"/>
        <constructor-arg index="1" value="testauthor"/>
        <constructor-arg index="2" value="2015"/>
    </bean>

    <aop:config>
        <!-- <aop:advisor advice-ref="txAdice" pointcut="execution(* by.leonovich.booklib.services.BookService.*(..))"/>-->
        <aop:aspect ref="notifier">
            <aop:pointcut id="advice" expression="execution(* *.findBook())"/>
            <aop:before pointcut-ref="advice" method="notifyBefore"/>
            <aop:after pointcut-ref="advice" method="notifyAfter"/>
        </aop:aspect>
    </aop:config>
</beans>